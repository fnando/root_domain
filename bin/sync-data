#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/inline"

gemfile do
  gem "aitch"
  gem "simpleidn"
end

class ImportDomainSuffixes
  def call
    list = []
    list += build(country_tlds, cctld: true, tld: true)
    list += build(tlds, tld: true)
    list += build(slds)

    save_file(:cctld, country_tlds.sort)
    save_file(:tlds, tlds.sort)
    save_file(:slds, slds.sort)
  end

  def save_file(file, data)
    File.open("#{__dir__}/../data/#{file}.json", "w") do |io|
      io << JSON.pretty_generate(data)
    end
  end

  def build(suffixes, attrs = {})
    suffixes = suffixes
               .compact
               .map(&:strip)
               .reject(&:empty?)
               .map(&:downcase)
               .uniq

    suffixes.map do |suffix|
      name = SimpleIDN.to_ascii(suffix)
      attrs.merge(name: name, levels: name.split(".").size)
    end
  end

  def country_tlds
    @country_tlds ||= fetch_country_tlds
  end

  def tlds
    @tlds ||= fetch_tlds
  end

  def slds
    @slds ||= (fetch_slds + fetch_public_suffix)
              .compact
              .map {|sld| SimpleIDN.to_ascii(sld).gsub("!", "") }
              .uniq
  end

  def fetch_tlds
    url = "https://data.iana.org/TLD/tlds-alpha-by-domain.txt"
    response = Aitch.get(url)
    tlds = response.body.lines
    tlds.shift # remove update notice
    tlds
      .map(&:chomp)
      .map(&:downcase)
      .uniq
  end

  def fetch_country_tlds
    url = "https://github.com/samayo/country-json/raw/master/src/country-by-domain-tld.json"
    response = Aitch.get(url)
    country_tlds = JSON.parse(response.body, symbolize_names: true)

    country_tlds
      .map {|info| info[:tld][1..-1] if info[:tld] }
      .compact
  end

  def fetch_slds
    url = "https://www.quackit.com/domain-names/country_domain_extensions.cfm"
    response = Aitch.get(url)
    response.data.css("b")
            .map {|node| node.text.squeeze.downcase }
            .select {|sld| sld.start_with?(".") }
            .map {|sld| sld[/^\.([-a-z0-9.]+)/, 1] }
            .reject(&:nil?)
            .reject {|sld| sld.split(".").size < 2 }
  end

  def fetch_public_suffix
    url = "https://publicsuffix.org/list/public_suffix_list.dat"
    response = Aitch.get(url)
    content, _ = response.body.split("END ICANN DOMAINS")

    content
      .lines
      .map {|line| line.gsub(/^\*\./, "") }
      .map(&:strip)
      .reject(&:empty?)
      .reject {|line| line.start_with?("/") }
      .select {|line| line.include?(".") }
  end
end

ImportDomainSuffixes.new.call
